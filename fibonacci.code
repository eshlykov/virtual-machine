  [0 : 144]        instruction pointer
  [1 : 175]        stack pointer (first free memory cell)

  [2 : 2147483648] reg1
  [3 : 2147483648] reg2
  [4 : 2147483648] reg3
  [5 : 2147483648] reg4
  [6 : 2147483648] reg5
  [7 : 2147483648] reg6
  [8 : 2147483648] reg7
  [9 : 2147483648] res

 [10 : 1214606444] Hell
 [11 : 1864441943] o! W
 [12 : 1751737192] hich
 [13 : 541485410]   Fib
 [14 : 1869504867] onac
 [15 : 1667833966] ci n
 [16 : 1970102885] umbe
 [17 : 1914724722] r ar
 [18 : 1696627055] e yo
 [19 : 1965058414] u in
 [20 : 1952805477] tere
 [21 : 1937007972] sted
 [22 : 543780415]   in?
 [23 : 0]          end of the first string
 [24 : 1198679393] Grea
 [25 : 1948279656] t ch
 [26 : 1869177701] oice
 [27 : 555766888]  ! Th
 [28 : 1696624245] e nu
 [29 : 1835165042] mber
 [30 : 543781632]   is\0
 [31 : 0]          end of the second string
 [32 : 1416126830] Than
 [33 : 1797290351] k yo
 [34 : 1965096960] u!\0\0
 [35 : 0]          end of the third string
 [36 : 0]          end of the strings block

 [37 : 0]          end of the labels block

 [38 : 43]         first command of the fibonacci
 [39 : 0]          end of the stings block (fibonacci)
 [40 : 133]        label base (fibonacci)
 [41 : 0]          end of the labels block (fibonacci)
 [42 : 0]          end of the functions block (fibonacci)

 [43 : 3]          pop
 [44 : 0]          
 [45 : 0]          
 [46 : 4]          move
 [47 : 9]          res1
 [48 : 2]          reg2
 [49 : 3]          pop
 [50 : 0]          
 [51 : 0]          
 [52 : 4]          move
 [53 : 9]          res
 [54 : 3]          reg2
 [55 : 2]          push
 [56 : 2]          reg1
 [57 : 0]          
 [58 : 7]          equal
 [59 : 3]          reg2
 [60 : 2147483648] 0
 [61 : 5]          if
 [62 : 9]          res
 [63 : 40]         base
 [64 : 7]          equal
 [65 : 3]          reg2
 [66 : 2147483649] 1
 [67 : 5]          if
 [68 : 9]          res
 [69 : 40]         base
 [70 : 2]          push
 [71 : 3]          reg2
 [72 : 0]          
 [73 : 9]          subtract
 [74 : 3]          reg2
 [75 : 2147483649] 2
 [76 : 2]          push
 [77 : 9]          res
 [78 : 0]          
 [79 : 10]         pushaddr
 [80 : 0]          
 [81 : 0]          
 [82 : 6]          call
 [83 : 38]         fibonacci
 [84 : 0]          
 [85 : 3]          pop
 [86 : 0]          
 [87 : 0]          
 [88 : 4]          move
 [89 : 9]          res
 [90 : 4]          reg3
 [91 : 3]          pop
 [92 : 0]          
 [93 : 0]          
 [94 : 9]          subtract
 [95 : 9]          res
 [96 : 2147483650] 2
 [97 : 2]          push
 [98 : 4]          reg
 [99 : 0]          
[100 : 2]          push
[101 : 9]          res
[102 : 0]          
[103 : 10]         pushaddr
[104 : 0]          
[105 : 0]          
[106 : 6]          call
[107 : 38]         fibonacci
[108 : 0]          
[109 : 3]          pop
[110 : 0]          
[111 : 0]          
[112 : 4]          move
[113 : 9]          res
[114 : 5]          reg4
[115 : 3]          pop
[116 : 0]          
[117 : 0]          
[118 : 8]          add
[119 : 5]          reg4
[120 : 9]          res
[121 : 4]          move
[122 : 9]          res
[123 : 6]          reg5
[124 : 3]          pop
[125 : 0]          
[126 : 0]          
[127 : 2]          push
[128 : 6]          reg5
[129 : 0]          
[130 : 11]         return
[131 : 0]          
[132 : 0]          
[133 : 3]          pop
[134 : 0]          
[135 : 0]          
[136 : 2]          push
[137 : 3]          reg
[138 : 0]          
[139 : 11]         return
[140 : 0]          
[141 : 0]          
[142 : 0]          end of commands block (fibonacci)

[143 : 0]          end of functions block (in main program)

[144 : 13]         str
[145 : 10]         hello
[146 : 0]          
[147 : 1]          read
[148 : 0]          
[149 : 0]          
[150 : 2]          push
[151 : 9]          res
[152 : 0]          
[153 : 10]         pushaddr
[154 : 0]          
[155 : 0]          
[156 : 6]          call
[157 : 38]         fibonacci
[158 : 0]          
[159 : 3]          pop
[160 : 0]          
[161 : 0]          
[162 : 13]         str
[163 : 24]         answer
[164 : 0]          
[165 : 0]          print
[166 : 9]          res
[167 : 0]          
[168 : 13]         str
[169 : 32]         goodbye
[170 : 0]          
[171 : 12]         exit
[172 : 0]          
[173 : 0]          
[174 : 0]          end of commands block

[175 : 0]          stack